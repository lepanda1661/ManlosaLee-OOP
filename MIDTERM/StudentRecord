import java.util.Scanner;

class Student {
private int studentId;
private String firstName;
private String middleName;
private String lastName;
private String suffix;
private int age;
private int yearLevel;
private String phoneNumber;
private String email;

// Default constructor
public Student() {
this.firstName = "";
}

// Parameterized constructor
public Student(int studentId, String firstName, String middleName, String lastName, String suffix, int age, int yearLevel, String phoneNumber, String email) {
this.studentId = studentId;
this.firstName = firstName;
this.middleName = middleName;
this.lastName = lastName;
this.suffix = suffix;
this.age = age;
this.yearLevel = yearLevel;
this.phoneNumber = phoneNumber;
this.email = email;
}

// Getters and setters
public int getStudentId() {
return studentId;
}

public void setStudentId(int studentId) {
this.studentId = studentId;
}

public String getFirstName() {
return firstName;
}

public void setFirstName(String firstName) {
this.firstName = firstName;
}

public String getMiddleName() {
return middleName;
}

public void setMiddleName(String middleName) {
this.middleName = middleName;
}

public String getLastName() {
return lastName;
}

public void setLastName(String lastName) {
this.lastName = lastName;
}

public String getSuffix() {
return suffix;
}

public void setSuffix(String suffix) {
this.suffix = suffix;
}

public int getAge() {
return age;
}

public void setAge(int age) {
this.age = age;
}

public int getYearLevel() {
return yearLevel;
}

public void setYearLevel(int yearLevel) {
this.yearLevel = yearLevel;
}

public String getPhoneNumber() {
return phoneNumber;
}

public void setPhoneNumber(String phoneNumber) {
this.phoneNumber = phoneNumber;
}

public String getEmail() {
return email;
}

public void setEmail(String email) {
this.email = email;
}

// Custom method to update student information
public void updateStudentInfo(Scanner scanner) {
System.out.println("Student Profile Details Update Selection Menu:");
System.out.println("1. Update Student ID No.");
System.out.println("2. Update First Name");
System.out.println("3. Update Middle Name");
System.out.println("4. Update Last Name");
System.out.println("5. Update Suffix");
System.out.println("6. Update Age");
System.out.println("7. Update Year Level");
System.out.println("8. Update Phone Number");
System.out.println("9. Update Email");
System.out.println("10. Return");
System.out.print("Enter your choice: ");
int updateChoice = scanner.nextInt();
scanner.nextLine(); // Consume the newline character

switch (updateChoice) {
case 1:
System.out.print("Enter New Student ID No.: ");
this.setStudentId(scanner.nextInt());
break;
case 2:
System.out.print("Enter New First Name: ");
this.setFirstName(scanner.nextLine());
break;
case 3:
System.out.print("Enter New Middle Name: ");
this.setMiddleName(scanner.nextLine());
break;
case 4:
System.out.print("Enter New Last Name: ");
this.setLastName(scanner.nextLine());
break;
case 5:
System.out.print("Enter New Suffix: ");
this.setSuffix(scanner.nextLine());
break;
case 6:
System.out.print("Enter New Age: ");
this.setAge(scanner.nextInt());
break;
case 7:
System.out.print("Enter New Year Level: ");
this.setYearLevel(scanner.nextInt());
break;
case 8:
System.out.print("Enter New Phone Number: ");
this.setPhoneNumber(scanner.nextLine());
break;
case 9:
System.out.print("Enter New Email: ");
this.setEmail(scanner.nextLine());
break;
case 10:
// Return
break;
default:
System.out.println("Invalid choice.");
}
}

// Custom method to display student details
public void displayStudentDetails() {
System.out.println("Student Profile Details:");
System.out.println("* Student ID No.: " + studentId);
System.out.println("* First Name: " + firstName);
System.out.println("* Middle Name: " + middleName);
System.out.println("* Last Name: " + lastName);
System.out.println("* Suffix: " + suffix);
System.out.println("* Age: " + age);
System.out.println("* Year Level: " + yearLevel);
System.out.println("* Phone Number: " + phoneNumber);
System.out.println("* Email: " + email);
}
}

class Course {
private String courseName;
private String courseCode;
private String department;

public Course(String courseName, String courseCode, String department) {
this.courseName = courseName;
this.courseCode = courseCode;
this.department = department;
}

public void displayCourseDetails() {
System.out.println("Student Course Details:");
System.out.println("* Course Name: " + courseName);
System.out.println("* Course Code: " + courseCode);
System.out.println("* Department: " + department);
}
}

public class StudentRecordManagement {
public static void main(String[] args) {
Scanner scanner = new Scanner(System.in);
Student student = new Student();
Course course = new Course("Bachelor of Science in Information Technology (BSIT)", "BSIT", "College of Computer Studies Department");

while (true) {
System.out.println("(Initial Selection Menu)");
System.out.println("1. Create Student Record");
System.out.println("2. Exit");
System.out.print("Enter your choice: ");
int initialChoice = scanner.nextInt();
scanner.nextLine(); // Consume the newline character

if (initialChoice == 1) {
// Create Student Record
System.out.println("Enter Student Details:");
System.out.print("Student ID No.: ");
student.setStudentId(scanner.nextInt());
scanner.nextLine(); // Consume the newline character
System.out.print("First Name: ");
student.setFirstName(scanner.nextLine());
// ... (continue to input student details)

// Record Management Menu
while (true) {
System.out.println("(Record Management Menu)");
System.out.println("1. Update Student Profile Details");
System.out.println("2. Update Student Course Details");
System.out.println("3. Display Student Record");
System.out.println("4. Exit");
System.out.print("Enter your choice: ");
int recordManagementChoice = scanner.nextInt();
scanner.nextLine(); // Consume the newline character

if (recordManagementChoice == 1) {
// Update Student Profile Details
student.updateStudentInfo(scanner);
} else if (recordManagementChoice == 2) {
// Update Student Course Details
System.out.println("Update Student Course Details:");
// Add code to update course details here
} else if (recordManagementChoice == 3) {
// Display Student Record
student.displayStudentDetails();
course.displayCourseDetails();
} else if (recordManagementChoice == 4) {
break; // Exit record management menu
}
}
} else if (initialChoice == 2) {
break; // Exit the program
}
}

// Close the scanner
scanner.close();
}
}
